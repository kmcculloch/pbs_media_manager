<?php

/**
 * @file
 * PBS Media Manager Migration.
 *
 * Creates a mechanism to migrate COVE API Player fields to Media Manager
 * Player fields.
 */

define('PBS_MEDIA_MANAGER_MIGRATE_ADMIN', 'admin/config/media/pbs_media_manager/cove_migration');

/**
 * Implements hook_menu().
 */
function pbs_media_manager_migrate_menu() {

  $items = array();

  $items[PBS_MEDIA_MANAGER_MIGRATE_ADMIN] = array(
    'title' => 'Migrate Cove Player fields',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pbs_media_manager_migrate_form'),
    'access arguments' => array('administer pbs_media_manager'),
    'file' => 'pbs_media_manager_migrate.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Helper function to find old COVE fields.
 */
function _pbs_media_manager_migrate_find_cove_fields() {
  // Load the fields using COVE Player module.
  $include_additional = array(
    'include_inactive' => TRUE,
  );
  $params = array(
    'module' => 'cove_api_player',
    'type' => 'pbs_video',
  );

  return field_read_fields($params, $include_additional);

}

/**
 * Helper function to find new Media Manager fields.
 */
function _pbs_media_manager_migrate_find_media_manager_fields() {
  // Load the fields using Media Manager Player module.
  $include_additional = array(
    'include_inactive' => TRUE,
  );
  $params = array(
    'module' => 'pbs_media_manager_player',
    'type' => 'pbs_media',
  );

  return field_read_fields($params, $include_additional);

}

/**
 * Helper function to prepare fields for migration form.
 *
 * @param array $cove_fields
 *   Array of cove fields.
 *
 * @return array
 *   An array of fields prepared for migration.
 */
function _pbs_media_manager_migrate_options(array $cove_fields) {
  // Load the Media Manager fields.
  $mm_fields = _pbs_media_manager_migrate_find_media_manager_fields();

  // Combine the two field arrays.
  $all_fields = $cove_fields + $mm_fields;

  // Build the options list.
  $options = _pbs_media_manager_migrate_prepare_fields($all_fields);

  return $options;

}

/**
 * Helper function to prepare fields for migration form.
 *
 * @param array|null $fields
 *   Array of fields.
 *
 * @return array
 *   An array of field options.
 */
function _pbs_media_manager_migrate_prepare_fields($fields = NULL) {
  $options = array();

  foreach ($fields as $field) {
    // Load the field instances.
    $field_instances = field_read_instances(array('field_name' => $field['field_name']), array('include_inactive'));

    foreach ($field_instances as $instance) {
      // If it's a COVE field and doesn't have a migration flag, set it.
      if ($field['module'] == 'cove_api_player' && !isset($instance['migrated'])) {
        $instance['migrated'] = FALSE;
        field_update_instance($instance);
      }

      // Add the field to the options array, divided by bundle.
      $options[$instance['entity_type'] . ':' . $instance['bundle']][$field['module']][$instance['field_name']] =
          $instance['field_name'];
    }
  }

  // Clean up $options array so it only includes bundles with COVE fields.
  foreach ($options as $bundle => $option) {
    if (!isset($option['cove_api_player'])) {
      unset($options[$bundle]);
    }
  }

  return $options;
}

/**
 * Selects just the migration settings fieldset to be returned for re-rendering.
 *
 * @return array
 *   Renderable array (the dropdown)
 */
function pbs_media_manager_migrate_fields_replace($form, $form_state) {
  return $form['fields'];
}

/**
 * Helper function for populating select lists.
 *
 * @param string $module
 *   The module.
 * @param string $bundle_selected
 *   The selected bundle.
 * @param array $options
 *   The list of options.
 *
 * @return array
 *   The altered list of options.
 */
function _pbs_media_manager_migrate_get_options($module, $bundle_selected, array $options) {

  if (isset($options[$bundle_selected][$module])) {
    $list = array('select' => t('-- Select a field --'));
    $list += $options[$bundle_selected][$module];
    return $list;
  }
  else {
    return array();
  }
}
